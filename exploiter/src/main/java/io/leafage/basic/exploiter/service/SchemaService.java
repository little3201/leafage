/*
 * Copyright (c) 2024-2025.  little3201.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *       https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.leafage.basic.exploiter.service;


import freemarker.template.TemplateException;
import io.leafage.basic.exploiter.dto.SchemaDTO;
import io.leafage.basic.exploiter.vo.SchemaVO;
import io.leafage.basic.exploiter.vo.TemplateVO;
import org.springframework.data.domain.Page;
import top.leafage.common.servlet.ServletBasicService;

import java.io.IOException;
import java.util.List;
import java.util.zip.ZipOutputStream;

/**
 * schema service.
 *
 * @author wq li
 */
public interface SchemaService extends ServletBasicService<SchemaDTO, SchemaVO> {

    /**
     * Retrieves a paginated list of records.
     *
     * @param page       The page number (zero-based).
     * @param size       The number of records per page.
     * @param linkId     The field filter.
     * @return A paginated list of records.
     */
    Page<SchemaVO> retrieve(int page, int size, Long linkId);

    /**
     * Generates a template.
     *
     * @param id  The primary key of the template.
     * @param zos The output stream to write the generated template.
     * @throws IOException If an I/O error occurs.
     */
    void generate(Long id, ZipOutputStream zos) throws IOException;

    /**
     * Previews the template.
     *
     * @param id The primary key of the template.
     * @return A list of template value objects.
     * @throws IOException       If an I/O error occurs.
     * @throws TemplateException If a template processing error occurs.
     */
    List<TemplateVO> preview(Long id) throws IOException, TemplateException;

    /**
     * Synchronizes the template.
     *
     * @param id The primary key of the template.
     */
    void sync(Long id);

}

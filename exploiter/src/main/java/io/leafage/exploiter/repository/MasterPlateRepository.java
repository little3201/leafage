/*
 * Copyright (c) 2024-2025.  little3201.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *       https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.leafage.exploiter.repository;

import io.leafage.exploiter.domain.MasterPlate;
import jakarta.transaction.Transactional;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

/**
 * Repository interface for template operations.
 * Extends ListCrudRepository and PagingAndSortingRepository.
 *
 * @author wq li
 **/
@Repository
public interface MasterPlateRepository extends JpaRepository<MasterPlate, Long> {

    /**
     * Checks if a record exists by name.
     *
     * @param name    The name of the record.
     * @param suffix  The suffix of the record.
     * @param type    The type of the record.
     * @param version The version of the record.
     * @return true if the record exists, false otherwise.
     */
    boolean existsByNameAndSuffixAndTypeAndVersion(String name, String suffix, String type, String version);

    /**
     * Checks if a record exists by name.
     *
     * @param name    The name of the record.
     * @param suffix  The suffix of the record.
     * @param type    The type of the record.
     * @param version The version of the record.
     * @param id      The id of the record.
     * @return true if the record exists, false otherwise.
     */
    boolean existsByNameAndSuffixAndTypeAndVersionAndIdNot(String name, String suffix, String type, String version, Long id);

    /**
     * Toggles the enabled status of a schema by its ID.
     *
     * @param id The ID of the schema.
     * @return result.
     */
    @Transactional
    @Modifying
    @Query("UPDATE MasterPlate t SET t.enabled = CASE WHEN t.enabled = true THEN false ELSE true END WHERE t.id = :id")
    int updateEnabledById(Long id);
}

